# cid-workflow-version: 0.5.0

# This file is generated by the CID Workflow GitHub App.
# DO NOT EDIT!

# name
name: 'CI - Release'

# triggers
on:
  workflow_dispatch:
    inputs:
      loglevel:
        description: Log level
        required: true
        default: info
        type: choice
        options:
          - trace
          - debug
          - info
          - warn
          - error
  push:
    tags:
      - v*.*.*
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - '.gitattributes'
      - '.editorconfig'
      - 'renovate.json'
      - 'CODEOWNERS'

# permissions, see https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions and https://docs.github.com/en/rest/overview/permissions-required-for-github-apps
permissions:
  actions: read # detection of GitHub Actions environment
  checks: none
  contents: read
  deployments: none
  id-token: none
  issues: none
  packages: none
  pages: none
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: none

# cancel in progress when a new run starts
concurrency:
  group: "${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"
  cancel-in-progress: true

env:
  CID_WORKFLOW: 'main'
  CID_VERSION: 'v0.5.0'
  CID_LOGLEVEL: "${{ github.event.inputs.loglevel || 'info' }}"
  # allowed modes are 'block' and 'audit'. Using https://github.com/step-security/harden-runner to harden the runner.
  EGRESS_POLICY: 'block'

# jobs
jobs:
  # go-build - github.com/cidverse/test
  go-build-github-com-cidverse-test:
    name: 'go-build - github.com/cidverse/test'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            proxy.golang.org:443
            storage.googleapis.com:443
            sum.golang.org:443
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "${{ env.CID_VERSION }}"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - go-build - github.com/cidverse/test
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --step go-build-github-com-cidverse-test
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "go-build-github-com-cidverse-test-${{ github.run_id }}"
          path: .dist/
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # go-test - github.com/cidverse/test
  go-test-github-com-cidverse-test:
    name: 'go-test - github.com/cidverse/test'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            proxy.golang.org:443
            storage.googleapis.com:443
            sum.golang.org:443
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "${{ env.CID_VERSION }}"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - go-test - github.com/cidverse/test
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --step go-test-github-com-cidverse-test
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "go-test-github-com-cidverse-test-${{ github.run_id }}"
          path: .dist/
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # gitleaks-scan
  gitleaks-scan:
    name: 'gitleaks-scan'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "${{ env.CID_VERSION }}"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - gitleaks-scan
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --step gitleaks-scan
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "gitleaks-scan-${{ github.run_id }}"
          path: .dist/
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # semgrep-scan
  semgrep-scan:
    name: 'semgrep-scan'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            semgrep.dev:443
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "${{ env.CID_VERSION }}"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - semgrep-scan
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          SEMGREP_RULES: "${{ env.SEMGREP_RULES }}"
          SEMGREP_APP_TOKEN: "${{ secrets.SEMGREP_APP_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --step semgrep-scan
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "semgrep-scan-${{ github.run_id }}"
          path: .dist/
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # zizmor-scan
  zizmor-scan:
    name: 'zizmor-scan'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "${{ env.CID_VERSION }}"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Action - zizmor-scan
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          GH_HOSTNAME: "${{ env.GH_HOSTNAME }}"
          GH_TOKEN: "${{ env.GH_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --step zizmor-scan
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "zizmor-scan-${{ github.run_id }}"
          path: .dist/
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
  # github-sarif-upload
  github-sarif-upload:
    name: 'github-sarif-upload'
    runs-on: ubuntu-24.04 # https://github.com/actions/runner-images
    needs: [gitleaks-scan, semgrep-scan, zizmor-scan]
    permissions:
      id-token: write # provenance signing
    timeout-minutes: 10
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@c6295a65d1254861815972266d5933fd6e532bdf # v2.11.1
        with:
          disable-telemetry: true
          disable-sudo: true
          egress-policy: "${{ env.EGRESS_POLICY }}"
          allowed-endpoints: >-
            github.com:443
            api.github.com:443
            codeload.github.com:443
            uploads.github.com:443
            objects.githubusercontent.com:443
            raw.githubusercontent.com:443
            ghcr.io:443
            pkg-containers.githubusercontent.com:443
      - name: Setup Tools
        uses: cidverse/ghact-cid-setup@c6dac0517d28bd8871c195fee9a6bd5a5854d5cb # v0.2.0
        with:
          version: "${{ env.CID_VERSION }}"
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          persist-credentials: false
      - name: Download Inputs > gitleaks-scan
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: "gitleaks-scan-${{ github.run_id }}"
          path: .dist
        continue-on-error: true
      - name: Download Inputs > semgrep-scan
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: "semgrep-scan-${{ github.run_id }}"
          path: .dist
        continue-on-error: true
      - name: Download Inputs > zizmor-scan
        uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: "zizmor-scan-${{ github.run_id }}"
          path: .dist
        continue-on-error: true
      - name: Action - github-sarif-upload
        env:
          CID_WORKFLOW: "${{ env.CID_WORKFLOW }}"
          CID_LOGLEVEL: "${{ env.CID_LOGLEVEL }}"
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
        run: |
          cid --log-level=${CID_LOGLEVEL:-info} plan execute --step github-sarif-upload
      - name: Upload Outputs
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: "github-sarif-upload-${{ github.run_id }}"
          path: .dist/
          retention-days: 1
          if-no-files-found: ignore
          compression-level: 6
          include-hidden-files: true
